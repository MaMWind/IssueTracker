@model IssueTracker.ViewModels.UserViewModel

@using IssueTracker.Authorization;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;

@inject UserManager<IdentityUser> userManager
@inject RoleManager<IdentityRole> roleManager

<div class="card">
    <div class="card-header">
        <h4>@Model.name</h4>
    </div>
    <div class="card-body">
        <form asp-controller="UserManagement" asp-action="AssignRoles">
            @if (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(Model.id), AuthorizationConstants.SupportRole)) {
                <input type="checkbox" asp-for="support" checked/><label>Support</label>
            } else {
                <input type="checkbox" asp-for="support"/><label>Support</label>
            }

            @if (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(Model.id), AuthorizationConstants.DeveloperRole)) {
                <input type="checkbox" asp-for="developer" checked/><label>Developer</label>
            } else {
                <input type="checkbox" asp-for="developer" /><label>Developer</label>
            }

            @if (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(Model.id), AuthorizationConstants.AdminRole)) {
                <input type="checkbox" asp-for="admin" checked/><label>Admin</label>
            } else {
                <input type="checkbox" asp-for="admin"/><label>Admin</label>
            }
            <input type="hidden" asp-for="id" value="@Model.id" />
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>